{
    "email": "jeremiahrichard1@gmail.com",
    "phoneNumber": "(504) 495-1577",
    "LinkedInURL": "https://www.linkedin.com/in/jeremiah-r-7815961a3/",
    "GithubURL": "https://github.com/jrichard5",
    "AboutMe": "Hi there! As a recent graduate with a passion for back-end development, I'm excited to pursue a career in software engineering.  During my internship, I was tasked with developing and maintaining the back-end of a complex web application, and I loved every minute of it which solidified my passion for programming.   While I appreciate the importance of front-end development, my true passion lies in the back-end, where I can apply my technical expertise to create efficient, scalable, and reliable systems.  I'm always eager to learn and take on new challenges, and I work well both independently and as part of a team.  I'm excited to bring my skills and enthusiasm to a new opportunity in software development, and I look forward to discussing how I can contribute to your team.",
    "something": "something",
    "projects":[
        {
            "projectTitle": "Notecard App",
            "slideshow":[
                {
                "picture": "assets/pictures/projects/NotecardApp/notecard1.jpg",
                "description": "First step I did was to plan out what data I needed and I it should be organized.  Created this ERD to illustrate and document relationship between data needed for this app."
                },
                { 
                "picture": "assets/pictures/projects/NotecardApp/notecard2.jpg",
                "description": "I created a web scrapper to get data for my database.  The web scapper was a C# console app that parsed webpages from the website Jisho and inserted the data into the database for use in the notecard app."
                },
                { 
                "picture": "assets/pictures/projects/NotecardApp/notecard3.jpg",
                "description": "Start page of the note card app.  First we will look at the Browse all view, then Filters, then Settings, then the rRndom Note Cards view.  This app was created with .NET's WPF using MVVM architecture"
                },
                { 
                "picture": "assets/pictures/projects/NotecardApp/notecard4.jpg",
                "description": "First screen of browse all, lets you select a category."
                },
                { 
                "picture": "assets/pictures/projects/NotecardApp/notecard5.jpg",
                "description": "This dialog pops up with adding a new category."
                },
                { 
                "picture": "assets/pictures/projects/NotecardApp/notecard6.jpg",
                "description": "This is the specialized category Japanese Vocab.  Each item on the list is editable and clickable."
                },
                { 
                "picture": "assets/pictures/projects/NotecardApp/notecard7.jpg",
                "description": "When a kanji is clicked, the app will list all words that contain that kanji. Note that there is only one entry"
                },
                { 
                "picture": "assets/pictures/projects/NotecardApp/notecard8.jpg",
                "description": "When adding a word, it will auto fill the chapter's topic name. Note how we adding another word with the last slide's kanji."
                },
                { 
                "picture": "assets/pictures/projects/NotecardApp/notecard9.jpg",
                "description": "The new word is now added, however the other kanji that is part of this word is not added in the database.  Therefore, it appears red to help you identify that you have not learned this kanji yet."
                },
                { 
                "picture": "assets/pictures/projects/NotecardApp/notecard91.jpg",
                "description": "This view is when you select a non-sepcialized or generic category.  I decided to use the datagrid widget to gain experience in using both data grid and listview."
                },
                { 
                "picture": "assets/pictures/projects/NotecardApp/notecard92.jpg",
                "description": "This view is when you select a item in the previous list."
                },
                { 
                "picture": "assets/pictures/projects/NotecardApp/notecard93.jpg",
                "description": "The filter view (selected from the start page).  Note we only select three topics."
                },
                { 
                "picture": "assets/pictures/projects/NotecardApp/notecard94.jpg",
                "description": "This is the settings view (selected from the start page).  Note how we select the Only Chapters Selected."
                },
                { 
                "picture": "assets/pictures/projects/NotecardApp/notecard95.jpg",
                "description": "This is the notecard page.  The bottom right shows the topics that are in queue to show to the user.  Note how it is the three categories that were selected."
                },
                { 
                "picture": "assets/pictures/projects/NotecardApp/notecard96.jpg",
                "description": "After turning off the Only Chapters Selected, the app will now display all cards.  For notecards in the Japanese Vocab category, the app will display any kanji not added to the database in red.  This helps test to ensure that you don't stress over not knowing kanji you haven't even learned yet."
                }
            ]
        },
        {
            "projectTitle": "Pet Api",
            "slideshow":[
                {
                    "picture": "assets/pictures/projects/PetApi/APITemplate01.png",
                    "description": "This API was made with .NET's web api. It automatically has swagger to help document endpoints for developers to get, post, update, or delete data."
                },
                {
                    "picture": "assets/pictures/projects/PetApi/APITemplate02.png",
                    "description": "Shows the GET all endpoint."
                },
                {
                    "picture": "assets/pictures/projects/PetApi/APITemplate03.png",
                    "description": "Shows the POST endpoint"
                },
                {
                    "picture": "assets/pictures/projects/PetApi/APITemplate04.png",
                    "description": "Shows GET all endpoint again to show that the POST endpoint worked."
                },
                {
                    "picture": "assets/pictures/projects/PetApi/APITemplate05.png",
                    "description": "Shows GET endpoint that gives a file."
                },
                {
                    "picture": "assets/pictures/projects/PetApi/APITemplate06.png",
                    "description": "Shows the CSV file that was downloaded.  Note 6 and 7 were there to test XSS.  I know the get all endpoint was encoded, but I think I missed the CSV file."
                }
            ]
        },
        {
            "projectTitle": "Pet Api",
            "slideshow":[]
        }
    ]
}